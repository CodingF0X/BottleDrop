exports.updateLog = (bevtype,arrDrinkType, quantity, barName, warehouse) => {
  let count = 0;
  let result = {};
  let drinksToRemove = [];

  if (!warehouse.log.has(barName)) {
    warehouse.log.set(barName, []);  
  }

  const currentLog = warehouse.log.get(barName);


  for (let i = arrDrinkType.length - 1; i >= 0 && count < quantity; i--) {
    const drink = arrDrinkType[i];

    if (!currentLog.includes(drink._id)) {
      if (!result[bevtype]) {
        result[bevtype] = [];
      }
      result[bevtype].push(drink); // or send only the drink._id and populate the drinks in the bar Microservice
      drinksToRemove.push(drink._id);
      count++;
    }
  }

  // Remove the succesfully sent drinks from warehouse
  warehouse.beverages.set(
    bevtype,
    arrDrinkType.filter(drink => !drinksToRemove.includes(drink._id))
  );

  // Update log
  currentLog.push(...drinksToRemove);
  warehouse.log.set(barName, currentLog);
  return result;
};
